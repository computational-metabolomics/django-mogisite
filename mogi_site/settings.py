"""
Django settings for dma_site project.
Generated by 'django-admin startproject' using Django 1.9.6.
For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""
from kombu import Exchange, Queue
import os
import re
# secret stuff (not for github!!!)
from .settings_secret import *
from .celery_settings_rabbitmq_djangodb import *
#from .celery_settings_redis import *
from .docker_check import is_docker




# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# Run Environment
# can be either local (for tomnl), CaStLeS (birmingham university VM system of docker container
user_name = 'tomnl'

docker_flag = is_docker()

if docker_flag:
    RUN_ENVIRONMENT = 'docker'
elif os.path.exists(os.path.join('/home', user_name)):
    RUN_ENVIRONMENT = 'local'
else:
    RUN_ENVIRONMENT = 'castles'


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['147.188.141.120', '0.0.0.0', '192.168.58.128', '127.0.0.1', 'localhost', '172.31.10.181','172.17.0.1']

CRISPY_TEMPLATE_PACK = 'bootstrap'

if RUN_ENVIRONMENT == 'castles':
    MEDIA_ROOT = "/rds/projects/2016/viantm-dma/"
    MEDIA_URL = '/rds/projects/2016/viantm-dma/'
    edr_pth = '/rds/projects/2015/viantm-01/users/'
    METAB_PUBCHEM_SQLITE_PTH = '/rds/projects/2016/viantm-dma/external_data/pubchem_sqlite/pubchem_20180520_1422.db'
    # if galaxy is accessible on the same storage drive as the django instance
    GALAXY_ROOT_PATH = '/rds/bear-apps/handbuilt/software/galaxy/viantm-dev'
elif RUN_ENVIRONMENT == 'local':
    MEDIA_ROOT = os.path.join('/home', user_name, 'media')
    MEDIA_URL = '/media/'
    edr_pth = os.path.join('/home', user_name, 'data')
    METAB_PUBCHEM_SQLITE_PTH = '/home/tomnl/pubchem_20180520_1422.db'
    # if galaxy is accessible on the same storage drive as the django instance
    GALAXY_ROOT_PATH = os.path.join('home', user_name, 'galaxy_storage')
elif RUN_ENVIRONMENT == 'docker':
    MEDIA_ROOT = os.path.join('/home', user_name, 'media')
    MEDIA_URL = os.path.join('/home', user_name, 'media/')
    edr_pth = os.path.join('/home', user_name, 'data')
    # METAB_PUBCHEM_SQLITE_PTH = ''
    # Only available if Galaxy is accessible on the same storage drive as the django instance
    # GALAXY_ROOT_PATH = os.path.join('home', user_name, 'galaxy_storage')




EXTERNAL_DATA_ROOTS = { 'RDS': {
                            'path': edr_pth,
                            'user_dirs': True,
                            'help_text': 'Research data store for current user',
                            'filepathfield': False   # if false will use charfield path, if true filepathfield will look
                                                    # recursively in a selected folder but will be to slow for complicated
                                                    # folder structure
                            },
                        'DMA': {
                            'path': '/rds/projects/2016/viantm-dma/',
                            # 'path': '/home/tomnl/dma/',
                            'user_dirs': False,
                            'help_text': 'Deep Metabolome Annotation research data store',
                            'filepathfield': False
                            }
}


EXCEL_SUPPORT = 'xlwt' # or 'openpyxl' or 'pyexcelerator'


LOGIN_REDIRECT_URL = 'index'
LOGIN_URL = '/login/'


# Application definition # sitetree

INSTALLED_APPS = [

    'mogi_site',
    'mogi',
    'misa',
    'mbrowse',
    'galaxy',
    'gfiles',

    'dal',
    'dal_select2',
    'django_tables2',
    'rest_framework',
    'django_celery_results',
    'django_filters',
    'bootstrap3',
    'django_sb_admin',
    'django_tables2_column_shifter',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

]
CKEDITOR_UPLOAD_PATH = "uploads/"
DJANGO_TABLES2_TEMPLATE = 'django_tables2/bootstrap.html'


# THUMBNAIL_HIGH_RESOLUTION = True   # for filer package
# FILER_ENABLE_PERMISSIONS = True

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    # 'djangobower.finders.BowerFinder',
)

PROJECT_ROOT = os.path.abspath(
    os.path.join(os.path.dirname(__file__), ".."),
)

STATIC_ROOT = os.path.join(PROJECT_ROOT, 'static')

ROOT_URLCONF = 'mogi_site.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [(os.path.join(BASE_DIR, 'templates')), ],

        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages'
            ],
        },
    },
]



WSGI_APPLICATION = 'mogi_site.wsgi.application'

if RUN_ENVIRONMENT == 'castles':
    DATABASES = {
      'default': {
          'ENGINE': 'django.db.backends.mysql', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
          'NAME': 'tnl495',                      # Or path to database file if using sqlite3.
          'USER': 'tnl495',                      # Not used with sqlite3.
          'PASSWORD': DATABASE_PASS,                  # Not used with sqlite3.
          'HOST': 'bberdb.bham.ac.uk',                      # Set to empty string for localhost. Not used with sqlite3.
          'PORT': '3306',                      # Set to empty string for default. Not used with sqlite3.
       },
        'OPTIONS': {
            'connect_timeout': 50,
        }
    }
elif RUN_ENVIRONMENT == 'local':
    # Database
    # https://docs.djangoproject.com/en/1.9/ref/settings/#databases
    DATABASES = {
       'default': {
           'ENGINE': 'django.db.backends.mysql', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
           'NAME': 'mogi',                      # Or path to database file if using sqlite3.
           'USER': 'tomnl',                      # Not used with sqlite3.
           'PASSWORD': DATABASE_PASS,                  # Not used with sqlite3.
           'HOST': '127.0.0.1',                      # Set to empty string for localhost. Not used with sqlite3.
           'PORT': '3306',                      # Set to empty string for default. Not used with sqlite3.
       }
    }
elif RUN_ENVIRONMENT == 'docker':
    # Database
    # https://docs.djangoproject.com/en/1.9/ref/settings/#databases
    DATABASES = {
         'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'docker',
            'USER': 'docker',
            'HOST': 'mysql-db',
            'PORT': '3306',
            'PASSWORD': 'docker',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/
STATIC_URL='/static/'
